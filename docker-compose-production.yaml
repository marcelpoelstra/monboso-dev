version: "3"

x-logging:
  &default-logging
  options:
    max-size: '1G'
    max-file: '5'
  driver: json-file

x-vc-environment:
  # Env vars common to most containers
  &default-vc-environment
  - UspLicenseKey
  - S3_ACCESS_KEY
  - S3_SECRET_KEY
  - S3_REGION
  - LOG_LEVEL
  - RABBITMQ_DEFAULT_USER
  - RABBITMQ_DEFAULT_PASS
  # Origin only
  - ORIGIN_PORT
  - REMOTE_STORAGE_URL
  # Virtual Channel API only
  - API_PORT
  - API_KEY
  - API_INSECURE
  - REMIX_TASK_TIMEOUT
  # RabbitMQ only
  - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
  - DAYS_TO_KEEP_TRANSITIONS_FOR

x-vc-volumes:
  &default-vc-volumes
  - type: bind
    source: ./channels
    target: /channels

services:

  # unified origin
  origin:
    image: ghcr.io/unifiedstreaming/virtual-channel-origin:1.12.4
    logging: *default-logging
    restart: always
    environment: *default-vc-environment
    volumes:
      - type: bind
        source: ./channels
        target: /var/www/unified-origin/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.origin.entrypoints=web"
      - "traefik.http.routers.origin.rule=PathPrefix(`/`)"

  # Virtual Channel application
  virtual-channel-api:
    image: ghcr.io/unifiedstreaming/virtual-channel-app:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes: *default-vc-volumes
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --proxy-headers --forwarded-allow-ips *
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=api"
      - "traefik.http.routers.api.rule=PathPrefix(`/`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  # Manifest Proxy application
  manifest-proxy:
    image: ghcr.io/unifiedstreaming/virtual-channel-manifest-proxy:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes:
      - type: bind
        source: ./channels
        target: /channels
    command: uvicorn app.main:app --host 0.0.0.0 --port 80 --proxy-headers --forwarded-allow-ips *
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manifest-proxy.rule=Path(`/{manifest:.*\\.ism[l]?/.*\\.(mpd|m3u8)}`)"
      - "traefik.http.routers.manifest-proxy.entrypoints=web"

  virtual-channel-worker-vod2live:
    image: ghcr.io/unifiedstreaming/virtual-channel-app:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes: *default-vc-volumes
    command: celery -A app.tasks.vod2live worker -Q vod2live --loglevel info

  virtual-channel-worker-transition:
    image: ghcr.io/unifiedstreaming/virtual-channel-app:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes: *default-vc-volumes
    command: celery -A app.tasks.trigger_transition worker -Q trigger_transition --loglevel info

  virtual-channel-worker-housekeeping:
    image: ghcr.io/unifiedstreaming/virtual-channel-app:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes: *default-vc-volumes
    command: celery -A app.tasks.housekeeping worker --loglevel info

  virtual-channel-celery-beat:
    image: ghcr.io/unifiedstreaming/virtual-channel-app:1.12.4
    restart: always
    logging: *default-logging
    environment: *default-vc-environment
    volumes: *default-vc-volumes
    command: celery -A app.housekeeping beat --loglevel info

  # redis and rabbitmq for task queue and results storage
  redis:
    image: redis:7.0.4
    restart: always
    entrypoint: redis-server --appendonly yes
    logging: *default-logging
    volumes:
      - redis_data:/data

  rabbitmq:
    logging: *default-logging
    hostname: vc-rabbit
    image: rabbitmq:3.11.0-alpine
    restart: always
    # Set consumer_timeout to allow Celery jobs with long ETA, see
    # https://docs.celeryq.dev/en/stable/userguide/calling.html#eta-and-countdown
    environment: *default-vc-environment
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  traefik:
    image: traefik:v2.7
    logging: *default-logging
    restart: always
    env_file:
      - traefik.env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.api.address=:8000"
      - "--entryPoints.api.forwardedHeaders.insecure"
    ports:
      - ${API_PORT}:8000

  vod-origin:
    image:   unifiedstreaming/origin:latest
    logging: *default-logging
    restart: always
    deploy:
      replicas: 2
    env_file:
      - vod-origin.env
  
  nginx-proxy:
    logging: *default-logging
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - '80:80'
    env_file:
      - nginx.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./conf.d.proxy/proxy.conf:/etc/nginx/proxy.conf
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html 

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  certs:
    driver: local
  vhostd:
    driver: local 
  html:
    driver: local